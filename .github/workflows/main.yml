name: CI-CD-Doxygen  # Nome do fluxo de trabalho

on:
  push:
    branches:
      - main  # O fluxo de trabalho será acionado quando houver um push na branch 'main'

jobs:
  build:  # Define um job chamado 'build'
    runs-on: ubuntu-latest  # O job será executado na última versão do Ubuntu disponível

    steps:  # Define os passos que serão executados no job
      - name: Checkout code  # Primeiro passo: fazer checkout do código
        uses: actions/checkout@v2  # Usa a ação 'checkout' na versão 2

      - name: Install Doxygen  # Segundo passo: instalar Doxygen
        run: sudo apt-get install -y doxygen  # Executa o comando para instalar Doxygen

      - name: Install Graphviz  # Terceiro passo: instalar Graphviz
        run: sudo apt-get install -y graphviz  # Executa o comando para instalar Graphviz

      - name: Clone Doxygen Awesome theme  # Quarto passo: clonar o tema Doxygen Awesome
        run: git clone https://github.com/jothepro/doxygen-awesome-css.git doxygen-awesome

      - name: Build Doxygen documentation  # Quinto passo: gerar documentação Doxygen
        run: |
          doxygen -u Doxyfile  # Atualiza o arquivo de configuração Doxygen
          echo "GENERATE_HTML = YES" >> Doxyfile  # Habilita a geração de HTML
          echo "HTML_EXTRA_STYLESHEET = doxygen-awesome/doxygen-awesome.css" >> Doxyfile  # Especifica o caminho para o tema Doxygen Awesome
          doxygen Doxyfile  # Gera a documentação com as configurações atualizadas
          
      - name: Deploy to GitHub Pages  # Sexto passo: implantar a documentação no GitHub Pages
        uses: peaceiris/actions-gh-pages@v3  # Usa a ação 'actions-gh-pages' na versão 3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Usa o token do GitHub para autenticação
          publish_dir: ./docs/html  # Define o diretório que será publicado no GitHub Pages
